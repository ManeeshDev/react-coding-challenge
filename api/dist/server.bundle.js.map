{"version":3,"file":"server.bundle.js","mappings":"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","sources":["C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\config\\db.config.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\controllers\\involved-sectors.controller.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\controllers\\sector.controller.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\controllers\\user.controller.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\models\\index.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\models\\involved-sectors.model.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\models\\sector.model.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\models\\user.model.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\routes\\sector.routes.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\app\\routes\\user.routes.js","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\node_modules\\dotenv\\lib\\main.js","external commonjs \"bcryptjs\"","external commonjs \"cors\"","external commonjs \"express\"","external commonjs \"sequelize\"","external node-commonjs \"fs\"","external node-commonjs \"os\"","external node-commonjs \"path\"","webpack/bootstrap","C:\\xampp\\htdocs\\Reactjs-developer-job-test\\react-coding-challenge\\api\\server.js"],"sourcesContent":["require('dotenv').config();\r\n\r\nmodule.exports = {\r\n  HOST: process.env.DB_HOST,\r\n  USER: process.env.DB_USER,\r\n  PASSWORD: process.env.DB_PASS,\r\n  DB: process.env.DB_NAME,\r\n  dialect: process.env.DIALECT,\r\n  pool: {\r\n    max: 5,\r\n    min: 0,\r\n    acquire: 30000,\r\n    idle: 10000,\r\n  },\r\n};\r\n","const db = require('../models');\r\nconst InvolvedSector = db.involvedSector;\r\n\r\nexports.findAll = (req, res) => {\r\n    InvolvedSector.findAll()\r\n        .then((data) => {\r\n            res.send({\r\n                success: true,\r\n                data: data,\r\n                message: \"Involved Sectors successfully fetched.\",\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            return res.status(500).send({\r\n                success: false,\r\n                data: null,\r\n                message: err.message || 'Some error occurred while retrieving sectors.',\r\n            });\r\n        });\r\n};\r\n\r\nexports.findOne = (req, res) => {\r\n    const id = req.params.id;\r\n    InvolvedSector.findByPk(id)\r\n        .then((data) => {\r\n            if (data) {\r\n                res.send({\r\n                    success: true,\r\n                    data: data,\r\n                    message: \"Involved Sector successfully fetched.\",\r\n                });\r\n            } else {\r\n                return res.status(404).send({\r\n                    success: false,\r\n                    data: null,\r\n                    message: `Cannot find Involved Sector with id=${id}.`,\r\n                });\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            return res.status(500).send({\r\n                success: false,\r\n                data: null,\r\n                message: err.message || 'Error retrieving Involved Sector with id=' + id,\r\n            });\r\n        });\r\n};\r\n\r\nexports.createInvolvedSectors = (req, res) => {\r\n    const id = req.body.id;\r\n    const name = req.body.name;\r\n    const sectors = req.body.sectors;\r\n    const isAgreedToTerms = req.body.agreeToTerms;\r\n\r\n    if (!name) {\r\n        return res.status(400).send({\r\n            success: false,\r\n            data: null,\r\n            message: 'Name can not be empty!',\r\n        });\r\n    }\r\n    if (!sectors || sectors.length <= 0) {\r\n        return res.status(400).send({\r\n            success: false,\r\n            data: null,\r\n            message: 'Sectors can not be empty!',\r\n        });\r\n    }\r\n    if (!isAgreedToTerms) {\r\n        return res.status(400).send({\r\n            success: false,\r\n            data: null,\r\n            message: 'Agreed To Terms can not be empty!',\r\n        });\r\n    }\r\n\r\n    const involvedSectors = {\r\n        name: name,\r\n        sectors: \"[\" + sectors.toString() + \"]\",\r\n        isAgreedToTerms: isAgreedToTerms,\r\n    };\r\n\r\n    if (id && id !== '') {\r\n        let involvedSector;\r\n        InvolvedSector.update(involvedSectors, {\r\n            where: {id: id},\r\n        })\r\n            .then(async (num) => {\r\n                if (num === 1 || (num.length > 0 && num[0] === 1)) {\r\n                    await InvolvedSector.findByPk(id).then((dataSector) => {\r\n                        involvedSector = dataSector;\r\n                    }).catch((err) => {\r\n                        involvedSector = null;\r\n                    });\r\n                    return res.send({\r\n                        success: true,\r\n                        data: involvedSector,\r\n                        message: 'Involved Sector was updated successfully.',\r\n                    });\r\n                } else {\r\n                    return res.send({\r\n                        success: false,\r\n                        data: num,\r\n                        message: `Cannot update Involved Sector with id=${id}. Maybe Involved Sector was not found or request is empty!`,\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                return res.status(500).send({\r\n                    success: false,\r\n                    data: null,\r\n                    message: err.message || 'Error updating Involved Sectors with id=' + id,\r\n                });\r\n            });\r\n    } else {\r\n        InvolvedSector.create(involvedSectors)\r\n            .then((data) => {\r\n                return res.send({\r\n                    success: true,\r\n                    data: data,\r\n                    message: \"Involved Sector successfully created.\",\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                return res.status(500).send({\r\n                    success: false,\r\n                    data: null,\r\n                    message: err.message || 'Some error occurred while creating the InvolvedSectors.',\r\n                });\r\n            });\r\n    }\r\n};\r\n","const db = require('../models');\r\nconst Sector = db.sectors;\r\n\r\nexports.findAll = (req, res) => {\r\n    Sector.findAll()\r\n        .then((data) => {\r\n            res.send({\r\n                success: true,\r\n                data: data,\r\n                message: \"Sectors successfully fetched.\",\r\n            });\r\n        })\r\n        .catch((err) => {\r\n            return res.status(500).send({\r\n                success: false,\r\n                data: null,\r\n                message: err.message || 'Some error occurred while retrieving sectors.',\r\n            });\r\n        });\r\n};\r\n","const db = require('../models');\r\nconst User = db.users;\r\nconst bcrypt = require('bcryptjs');\r\n\r\nexports.create = (req, res) => {\r\n\tconst email = req.body.email;\r\n\tconst password = req.body.password;\r\n\tif (!email) {\r\n\t\treturn res.status(400).send({message: 'Email can not be empty!',});\r\n\t}\r\n\tif (!password) {\r\n\t\treturn res.status(400).send({message: 'Password can not be empty!',});\r\n\t}\r\n\tif (!validEmail(email)) {\r\n\t\treturn res.status(400).send({message: 'This email is not valid email address!',});\r\n\t}\r\n    if (!validPassword(password)) {\r\n\t\treturn res.status(400).send({message: 'This password is not valid password!',});\r\n    }\r\n\tUser.findOne({\r\n\t\twhere: {email: email,},\r\n\t}).then((user) => {\r\n\t\tif (user) {\r\n\t\t\treturn res.status(400).send({message: 'Failed! Username is already in use!',});\r\n\t\t} else {\r\n\t\t\tconst user = {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: bcrypt.hashSync(password, 8),\r\n\t\t\t\tisAdmin: req.body.isAdmin ? req.body.isAdmin : false,\r\n\t\t\t\tfirst_name: req.body.first_name,\r\n\t\t\t\tlast_name: req.body.last_name,\r\n\t\t\t\tmobile: req.body.mobile,\r\n\t\t\t\tbirthday: req.body.birthday,\r\n\t\t\t\tgender: req.body.gender,\r\n\t\t\t\tprofession: req.body.profession,\r\n\t\t\t};\r\n\t\t\tUser.create(user)\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\treturn res.send(data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err) => {\r\n\t\t\t\t\treturn res.status(500).send({\r\n\t\t\t\t\t\tmessage: err.message || 'Some error occurred while creating the User.',\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexports.findOne = (req, res) => {\r\n\tconst id = req.params.id;\r\n\tUser.findByPk(id)\r\n\t\t.then((data) => {\r\n\t\t\tif (data) {\r\n\t\t\t\treturn res.send(data);\r\n\t\t\t} else {\r\n\t\t\t\treturn res.status(404).send({message: `Cannot find User with id=${id}.`,});\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\treturn res.status(500).send({message: 'Error retrieving User with id=' + id,});\r\n\t\t});\r\n};\r\n\r\n\r\nfunction validEmail(email) {\r\n\tconst regex = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n\treturn regex.test(String(email).toLowerCase());\r\n}\r\n\r\nfunction validPassword(password) {\r\n\tconst hasSquareBracketsOrBackslash = password !== password.replace(/\\[|\\]/g, '').replace(/\\\\|\\//g, '');\r\n\tconst specialChar = (password.match(/[~/`%^*:;\"'<>?,-.|_=+(){}]+/) && !hasSquareBracketsOrBackslash);\r\n\tconst length = password.toString().length >= 6;\r\n\tconst hasNumber = password.match(/\\d/);\r\n\treturn !!(specialChar && length && hasNumber);\r\n}\r\n","const dbConfig = require('../config/db.config.js');\r\n\r\nconst Sequelize = require('sequelize');\r\nconst sequelize = new Sequelize(dbConfig.DB, dbConfig.USER, dbConfig.PASSWORD, {\r\n\thost: dbConfig.HOST,\r\n\tdialect: dbConfig.dialect,\r\n\toperatorsAliases: false,\r\n\tpool: {\r\n\t\tmax: dbConfig.pool.max,\r\n\t\tmin: dbConfig.pool.min,\r\n\t\tacquire: dbConfig.pool.acquire,\r\n\t\tidle: dbConfig.pool.idle,\r\n\t},\r\n});\r\n\r\nconst db = {};\r\n\r\ndb.Sequelize = Sequelize;\r\ndb.sequelize = sequelize;\r\n\r\ndb.users = require('./user.model.js')(sequelize, Sequelize);\r\ndb.sectors = require('./sector.model')(sequelize, Sequelize);\r\ndb.involvedSector = require('./involved-sectors.model')(sequelize, Sequelize);\r\n\r\nmodule.exports = db;\r\n","module.exports = (sequelize, Sequelize) => {\r\n\tconst InvolvedSector = sequelize.define('involved_sector', {\r\n\t\tname: { type: Sequelize.STRING },\r\n\t\tsectors: { type: Sequelize.STRING },\r\n\t\tisAgreedToTerms: { type: Sequelize.INTEGER },\r\n\t});\r\n\treturn InvolvedSector;\r\n};\r\n","module.exports = (sequelize, Sequelize) => {\r\n    const Sector = sequelize.define('sector', {\r\n        title: {type: Sequelize.STRING},\r\n        value: {type: Sequelize.STRING},\r\n    });\r\n\r\n    (async () => {\r\n        await Sector.sync();\r\n        const {count, rows} = await Sector.findAndCountAll();\r\n        if (count === 0 && rows.length === 0) {\r\n            console.log(\"===================================Sector bulkCreate======================\");\r\n            Sector.bulkCreate([\r\n                {title: 'Manufacturing', value: '1'},\r\n                {title: 'Construction materials', value: '19'},\r\n                {title: 'Electronics and Optics', value: '18'},\r\n                {title: 'Food and Beverage', value: '6'},\r\n                {title: 'Bakery & confectionery products', value: '342'},\r\n                {title: 'Beverages', value: '43'},\r\n                {title: 'Fish & fish products', value: '42'},\r\n                {title: 'Meat & meat products', value: '40'},\r\n                {title: 'Milk & dairy products', value: '39'},\r\n                {title: 'Otherrr', value: '437'},\r\n                {title: 'Sweets & snack food', value: '378'},\r\n                {title: 'Furniture', value: '13'},\r\n                {title: 'Bathroom/sauna', value: '389'},\r\n                {title: 'Bedroom', value: '385'},\r\n                {title: 'Children room', value: '390'},\r\n                {title: 'Kitchen', value: '98'},\r\n                {title: 'Living room', value: '101'},\r\n                {title: 'Office', value: '392'},\r\n                {title: 'Other (Furniture)', value: '394'},\r\n                {title: 'Outdoor', value: '341'},\r\n                {title: 'Project furniture', value: '99'},\r\n                {title: 'Machinery', value: '12'},\r\n                {title: 'Machinery components', value: '94'},\r\n                {title: 'Machinery equipment/tools', value: '91'},\r\n                {title: 'Manufacture of machinery', value: '224'},\r\n                {title: 'Maritime', value: '97'},\r\n                {title: 'Aluminium and steel workboats', value: '271'},\r\n                {title: 'Boat/Yacht building', value: '269'},\r\n                {title: 'Ship repair and conversion', value: '230'},\r\n                {title: 'Metal structures', value: '93'},\r\n                {title: 'Otherr', value: '508'},\r\n                {title: 'Repair and maintenance service', value: '227'},\r\n                {title: 'Metalworking', value: '11'},\r\n                {title: 'Construction of metal structures', value: '67'},\r\n                {title: 'Houses and buildings', value: '263'},\r\n                {title: 'Metal products', value: '267'},\r\n                {title: 'Metal works', value: '542'},\r\n                {title: 'CNC-machining', value: '75'},\r\n                {title: 'Forgings Fasteners', value: '62'},\r\n                {title: 'Gas Plasma Laser cutting', value: '69'},\r\n                {title: 'MIG TIG Aluminum welding', value: '66'},\r\n                {title: 'Plastic and Rubber', value: '9'},\r\n                {title: 'Packaging', value: '54'},\r\n                {title: 'Plastic goods', value: '556'},\r\n                {title: 'Plastic processing technology', value: '559'},\r\n                {title: 'Blowing', value: '55'},\r\n                {title: 'Moulding', value: '57'},\r\n                {title: 'Plastics welding and processing', value: '53'},\r\n                {title: 'Plastic profiles', value: '560'},\r\n                {title: 'Printing', value: '5'},\r\n                {title: 'Advertising', value: '148'},\r\n                {title: 'Book/Periodicals printing', value: '150'},\r\n                {title: 'Labelling and packaging printing', value: '145'},\r\n                {title: 'Textile and Clothing', value: '7'},\r\n                {title: 'Clothing', value: '44'},\r\n                {title: 'Textile', value: '45'},\r\n                {title: 'Wood', value: '8'},\r\n                {title: 'Other (Wood)', value: '337'},\r\n                {title: 'Wooden building materials', value: '51'},\r\n                {title: 'Wooden houses', value: '47'},\r\n                {title: 'Other', value: '3'},\r\n                {title: 'Creative industries', value: '37'},\r\n                {title: 'Energy technology', value: '29'},\r\n                {title: 'Environment', value: '33'},\r\n                {title: 'Service', value: '2'},\r\n                {title: 'Business services', value: '25'},\r\n                {title: 'Engineering', value: '35'},\r\n                {title: 'Information Technology and Telecommunications', value: '28'},\r\n                {title: 'Data processing Web portals E-marketing', value: '581'},\r\n                {title: 'Programming Consultancy', value: '576'},\r\n                {title: 'Software Hardware', value: '121'},\r\n                {title: 'Telecommunications', value: '122'},\r\n                {title: 'Tourism', value: '22'},\r\n                {title: 'Translation services', value: '141'},\r\n                {title: 'Transport and Logistics', value: '21'},\r\n                {title: 'Air', value: '110'},\r\n                {title: 'Rail', value: '114'},\r\n                {title: 'Road', value: '112'},\r\n                {title: 'Water', value: '113'},\r\n            ]).then(() => {\r\n                console.log(\"Sector bulkCreate done..\");\r\n                console.log(\"===================================Sector bulkCreate======================\");\r\n            });\r\n        }\r\n    })();\r\n\r\n    return Sector;\r\n};\r\n","module.exports = (sequelize, Sequelize) => {\r\n\tconst User = sequelize.define('user', {\r\n\t\temail: { type: Sequelize.STRING },\r\n\t\tpassword: { type: Sequelize.STRING },\r\n\t});\r\n\treturn User;\r\n};\r\n","module.exports = (app) => {\r\n\tconst router = require('express').Router();\r\n\tconst sectors = require('../controllers/sector.controller.js');\r\n\tconst involvedSectors = require('../controllers/involved-sectors.controller.js');\r\n\r\n\trouter.get('/sectors', sectors.findAll);\r\n\trouter.get('/all-involved-sectors', involvedSectors.findAll);\r\n\trouter.get('/involved-sector-by/:id', involvedSectors.findOne);\r\n\trouter.post('/involved-sectors', involvedSectors.createInvolvedSectors);\r\n\r\n\tapp.use('/api/public', router);\r\n};\r\n","module.exports = (app) => {\r\n\tconst users = require('../controllers/user.controller.js');\r\n\tconst router = require('express').Router();\r\n\r\n\trouter.post('/', users.create);\r\n\trouter.get('/:id', users.findOne);\r\n\r\n\tapp.use('/api/user', router);\r\n};\r\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n","module.exports = require(\"bcryptjs\");","module.exports = require(\"cors\");","module.exports = require(\"express\");","module.exports = require(\"sequelize\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const express = require(\"express\");\r\nconst cors = require(\"cors\");\r\nrequire('dotenv').config();\r\nconst app = express();\r\n\r\nconst corsOptions = {\r\n  origin: \"http://localhost:3000\",\r\n};\r\n\r\napp.use(cors(corsOptions));\r\napp.use(express.json());\r\napp.use(\r\n  express.urlencoded({ extended: true })\r\n);\r\nconst db = require(\"./app/models\");\r\ndb.sequelize.sync();\r\n\r\n// simple route\r\napp.get(\"/\", (req, res) => {\r\n  res.json({ message: \"Welcome to Stack application.  >> REACT CODING CHALLENGE API :)\" });\r\n});\r\n\r\nrequire(\"./app/routes/user.routes\")(app);\r\nrequire(\"./app/routes/sector.routes\")(app);\r\n\r\n// set port, listen for requests\r\nconst PORT = process.env.PORT || 8080;\r\napp.listen(PORT, () => {\r\n  console.log(`***********************************************`);\r\n  console.log(`Server is running on port ${PORT}.`);\r\n  console.log(`***********************************************`);\r\n});\r\n"],"names":["module","exports","HOST","process","env","DB_HOST","USER","DB_USER","PASSWORD","DB_PASS","DB","DB_NAME","dialect","DIALECT","pool","max","min","acquire","idle","InvolvedSector","involvedSector","findAll","req","res","then","data","send","success","message","catch","err","status","findOne","id","params","findByPk","createInvolvedSectors","body","name","sectors","isAgreedToTerms","agreeToTerms","length","involvedSectors","toString","update","where","async","num","dataSector","create","Sector","User","users","bcrypt","email","password","RegExp","test","String","toLowerCase","validEmail","hasSquareBracketsOrBackslash","replace","specialChar","match","hasNumber","validPassword","user","hashSync","isAdmin","first_name","last_name","mobile","birthday","gender","profession","dbConfig","Sequelize","sequelize","host","operatorsAliases","db","define","type","STRING","INTEGER","title","value","sync","count","rows","findAndCountAll","console","log","bulkCreate","app","router","get","post","use","fs","path","os","version","LINE","_log","DotenvModule","config","options","dotenvPath","resolve","cwd","encoding","debug","Boolean","override","envPath","join","homedir","slice","parsed","parse","readFileSync","Object","keys","forEach","key","prototype","hasOwnProperty","call","e","error","src","obj","lines","exec","trim","maybeQuote","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","express","cors","origin","json","urlencoded","extended","PORT","listen"],"sourceRoot":""}